/* tslint:disable */
/* eslint-disable */
/**
 * Overmind API
 * API for managing your Overmind account
 *
 * The version of the OpenAPI document: 0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Details to update for a source
 * @export
 * @interface AdminCreateSourceRequest
 */
export interface AdminCreateSourceRequest {
    /**
     * The descriptive name of the source
     * @type {string}
     * @memberof AdminCreateSourceRequest
     */
    descriptiveName?: string;
    /**
     * How many replicas of the source to run??? Do we need this?
     * @type {number}
     * @memberof AdminCreateSourceRequest
     */
    replicas?: number;
    /**
     * Docker image of the source
     * @type {string}
     * @memberof AdminCreateSourceRequest
     */
    image?: string;
    /**
     * Config for this source. See the source documentation for what config is available/required
     * @type {{ [key: string]: string; }}
     * @memberof AdminCreateSourceRequest
     */
    config?: { [key: string]: string; };
}

/**
 * Check if a given object implements the AdminCreateSourceRequest interface.
 */
export function instanceOfAdminCreateSourceRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AdminCreateSourceRequestFromJSON(json: any): AdminCreateSourceRequest {
    return AdminCreateSourceRequestFromJSONTyped(json, false);
}

export function AdminCreateSourceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminCreateSourceRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'descriptiveName': !exists(json, 'descriptive_name') ? undefined : json['descriptive_name'],
        'replicas': !exists(json, 'replicas') ? undefined : json['replicas'],
        'image': !exists(json, 'image') ? undefined : json['image'],
        'config': !exists(json, 'config') ? undefined : json['config'],
    };
}

export function AdminCreateSourceRequestToJSON(value?: AdminCreateSourceRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'descriptive_name': value.descriptiveName,
        'replicas': value.replicas,
        'image': value.image,
        'config': value.config,
    };
}

