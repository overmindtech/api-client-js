/**
 * Overmind API
 * API for managing your Overmind account
 *
 * The version of the OpenAPI document: 0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { Account, AdminCreateAccountRequest, AdminCreateSourceRequest, Source, TokenRequestData } from '../models';
export interface AdminCreateAccountOperationRequest {
    adminCreateAccountRequest: AdminCreateAccountRequest;
}
export interface AdminCreateSourceOperationRequest {
    accountName: string;
    adminCreateSourceRequest: AdminCreateSourceRequest;
}
export interface AdminCreateTokenRequest {
    accountName: string;
    tokenRequestData: TokenRequestData;
}
export interface AdminDeleteAccountRequest {
    accountName: string;
}
export interface AdminDeleteSourceRequest {
    accountName: string;
    sourceId: string;
}
export interface AdminGetAccountRequest {
    accountName: string;
}
export interface AdminGetSourceRequest {
    accountName: string;
    sourceId: string;
}
export interface AdminListSourcesRequest {
    accountName: string;
}
export interface AdminUpdateSourceRequest {
    accountName: string;
    sourceId: string;
    adminCreateSourceRequest: AdminCreateSourceRequest;
}
/**
 *
 */
export declare class AdminApi extends runtime.BaseAPI {
    /**
     * Creates a new account, public_nkey will be autogenerated
     * Accounts - Create
     */
    adminCreateAccountRaw(requestParameters: AdminCreateAccountOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Account>>;
    /**
     * Creates a new account, public_nkey will be autogenerated
     * Accounts - Create
     */
    adminCreateAccount(requestParameters: AdminCreateAccountOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Account>;
    /**
     * Creates a new source within a given account
     * Sources - Create
     */
    adminCreateSourceRaw(requestParameters: AdminCreateSourceOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Source>>;
    /**
     * Creates a new source within a given account
     * Sources - Create
     */
    adminCreateSource(requestParameters: AdminCreateSourceOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Source>;
    /**
     * Create a new NATS token for a given public NKey. The user requesting must control the associated private key also in order to connect to NATS as the token is not enough on its own
     * Generate a NATS token
     */
    adminCreateTokenRaw(requestParameters: AdminCreateTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * Create a new NATS token for a given public NKey. The user requesting must control the associated private key also in order to connect to NATS as the token is not enough on its own
     * Generate a NATS token
     */
    adminCreateToken(requestParameters: AdminCreateTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
    /**
     * Deletes an account
     * Accounts - Delete
     */
    adminDeleteAccountRaw(requestParameters: AdminDeleteAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes an account
     * Accounts - Delete
     */
    adminDeleteAccount(requestParameters: AdminDeleteAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Deletes a source from an account
     * Sources - Delete
     */
    adminDeleteSourceRaw(requestParameters: AdminDeleteSourceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes a source from an account
     * Sources - Delete
     */
    adminDeleteSource(requestParameters: AdminDeleteSourceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Get the details of a given account
     * Accounts - Get details
     */
    adminGetAccountRaw(requestParameters: AdminGetAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Account>>;
    /**
     * Get the details of a given account
     * Accounts - Get details
     */
    adminGetAccount(requestParameters: AdminGetAccountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Account>;
    /**
     * Gets the details of a source within a given account
     * Sources - Get details
     */
    adminGetSourceRaw(requestParameters: AdminGetSourceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Source>>;
    /**
     * Gets the details of a source within a given account
     * Sources - Get details
     */
    adminGetSource(requestParameters: AdminGetSourceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Source>;
    /**
     * Lists the details of all NATS Accounts
     * Accounts - List
     */
    adminListAccountsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Account>>>;
    /**
     * Lists the details of all NATS Accounts
     * Accounts - List
     */
    adminListAccounts(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Account>>;
    /**
     * Lists all sources within a particular account
     * Sources - List
     */
    adminListSourcesRaw(requestParameters: AdminListSourcesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Source>>>;
    /**
     * Lists all sources within a particular account
     * Sources - List
     */
    adminListSources(requestParameters: AdminListSourcesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Source>>;
    /**
     * Updates the details of a source within a given account
     * Sources - Update
     */
    adminUpdateSourceRaw(requestParameters: AdminUpdateSourceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Updates the details of a source within a given account
     * Sources - Update
     */
    adminUpdateSource(requestParameters: AdminUpdateSourceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}
